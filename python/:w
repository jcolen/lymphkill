import pydicom
import os
import re

import numpy as np

def find_prefixed_file(directory, prefix):
	for i in os.listdir(directory):
		if prefix in i:
			return os.path.join(directory, i)

def load_dicom_imageheaders(directory, siUID):
	#Loop over dicom files in directory
	imgheaders = []
	for i in os.listdir(directory):
		try:
			info = pydicom.dcmread(os.path.join(directory, i))
			if info.StudyInstanceUID == siUID and re.search('^RT', info.Modality) is None:
				imgheaders.append(info)
		except:
			continue
	imgheaders.sort(key=lambda x: int(x.InstanceNumber))
	return imgheaders

def build_affine_transformation(headers):
	N = len(headers)
	dr, dc = float(headers[0].PixelSpacing[0]), float(headers[0].PixelSpacing[1])
	F = np.zeros([3, 2])
	F[:, 0] = headers[0].ImageOrientationPatient[:3]
	F[:, 1] = headers[0].ImageOrientationPatient[3:6]

	T1 = np.array(headers[0].ImagePositionPatient, dtype='float')
	TN = np.array(headers[-1].ImagePositionPatient, dtype='float')
	k = (T1 - TN) / (1 - N)

	A = np.array([
		[F[0, 0] * dr, F[0, 1] * dc, k[0], T1[0]],
		[F[1, 0] * dr, F[1, 1] * dc, k[1], T1[1]],
		[F[2, 0] * dr, F[2, 1] * dc, k[2], T1[2]],
		[0, 0, 0, 1]])
	
	return A


def read_structures(rtssheader, imageheaders):
	xfm = build_affine_transformation(imageheaders)
	dim_min = np.array([0, 0, 0, 1])
	dim_max = np.array([imageheaders[0].Columns-1, imageheaders[1].Rows-1, len(imageheaders)-1, 1])
	template = np.zeros([imageheaders[0].Columns, imageheaders[1].Rows, len(imageheaders)])

	ncontours = len(rtssheader.ROIContourSequence)
	contours = {
		'ROIName': [None] * ncontours, 
		'Points': [None] * ncontours, 
		'VoxPoints': [None] * ncontours, 
		'Segmentation': [None] * ncontours
	}

	print(ncontours)

	for i in range(ncontours):
		print(rtssheader.StructureSetROISequence[i].ROINumber, rtssheader.ROIContourSequence.ReferencedROINumber)
		contours['ROIName'][i] = rtssheader.StructureSetROISequence[i].ROIName
		contours['Segementation'][i] = template

	return contours

def load_structures(directory, rts_prefix='RTSTRUCT', rtd_prefix='RTDOSE', ct_prefix='CT'):
	rtstruct_file = find_prefixed_file(directory, rts_prefix)
	ct_file = find_prefixed_file(directory, ct_prefix)
	rtdose_file = find_prefixed_file(directory, rtd_prefix)

	rtssheader = pydicom.dcmread(rtstruct_file)
	ct_info = pydicom.dcmread(ct_file)
	rtd_info = pydicom.dcmread(rtdose_file)

	print(ct_file)
	print(rtdose_file)

	imageheaders = load_dicom_imageheaders(directory, rtssheader.StudyInstanceUID)

	print('Found Organs:')
	for struct in rtssheader.StructureSetROISequence:
		print(struct.ROIName)

	print('Loading in contours')
	contours = read_structures(rtssheader, imageheaders)

	return contours 


if __name__=='__main__':
	load_structures('../data/AA/clinical')
